//----------------------------------------------------------------------------------------------------;
var fileNm = "./js/b2linkUIClass/list/window.b2linkUIClass.baseList.NextPrevRollUserHandleEvtSearch.js";
if( console ) console.log( "[ S ] - " + fileNm + "----------" );
//----------------------------------------------------------------------------------------------------;

/**
 * window.b2linkUIClass.baseList.NextPrevRollSearch를 상속한다.
 *
 * MouseWheelEvent를 감지하여 List 조회가 가능하게 한다.
 *
 * @function
 * @param {String} url 최하위 JS 파일, 이 함수를 호출한 가장 마지막 함수가 존재하는 JS 파일 URL, HTML과 셋트인 파일의 URL이다.
 * @param {HTMLUListElement} $el_ul 이 API에서 생성되는 Controller(_this) 객체의 Target HTMLUListElement.
 */
window.b2linkUIClass.baseList.NextPrevRollUserHandleEvtSearch = function( url, $el_ul )
{
	//Extends;
	// var _this = window.b2linkUIClass.baseList.NextPrevRollSearch( url, $el_ul );
	var _this = window.b2linkUIClass.baseList.NextPrevSearch( url, $el_ul );

	//----------------------------------------------------------------------------------------------------;
	//	STATIC;
	//----------------------------------------------------------------------------------------------------;

	var _el_ListContainer = _this.get_el_ListContainer();
	var _bScrollBottomEnd = false;
	var _bScrollTopEnd = false;

	//----------------------------------------------------------------------------------------------------;
	//	EVENT;
	//----------------------------------------------------------------------------------------------------;

	/**
	 * @function
	 */
	var _addEvent = function()
	{
		_removeEvent();
		_addEvent_scroll_listItemContainer();
	};

	//--------------------------------------------------;

	/**
	 * @function
	 */
	var _removeEvent = function()
	{
		_removeEvent_scroll_listItemContainer();
		_removeEvent_mWheel_listItemContainer();
	};

	//--------------------------------------------------;

	/**
	 * @function
	 */
	var _addEvent_scroll_listItemContainer = function()
	{
		_removeEvent_scroll_listItemContainer();
		_el_ListContainer.addEventListener( "scroll", _evt_mScroll_listItemContainer, false, 0, true );
	};

	//--------------------------------------------------;

	/**
	 * @function
	 */
	var _removeEvent_scroll_listItemContainer = function()
	{
		_el_ListContainer.removeEventListener( "scroll", _evt_mScroll_listItemContainer, false );
	};

	//--------------------------------------------------;

	/**
	 * @function
	 */
	var _addEvent_mWheel_listItemContainer = function()
	{
		_removeEvent_mWheel_listItemContainer();
		_el_ListContainer.addEventListener( "mousewheel", _evt_mWheel_listItemContainer, false, 0, true );
	};

	//--------------------------------------------------;

	/**
	 * @function
	 */
	var _removeEvent_mWheel_listItemContainer = function()
	{
		_el_ListContainer.removeEventListener( "mousewheel", _evt_mWheel_listItemContainer, false );
	};

	//--------------------------------------------------;

	/** 
	 * @function
	 * @param {MouseEvent} e event
	 */
	var _evt_mScroll_listItemContainer = function( e )
	{
		//window.KaiLog.timeStamp( "-- [ S ] - _evt_mScroll_listItemContainer():void----------" );

		e.stopImmediatePropagation();
		e.stopPropagation();
		e.preventDefault();

		_removeEvent_scroll_listItemContainer();

		var t = e.target;

		if( t.scrollHeight <= Math.ceil(t.clientHeight + t.scrollTop) )
		{
			console.log( "scroll is Bottom." );
			_bScrollBottomEnd = true;
			_bScrollTopEnd = false;
			_addEvent_scroll_listItemContainer();
			_addEvent_mWheel_listItemContainer();
			//window.KaiLog.timeStamp( "-- [ E ] - _evt_mScroll_listItemContainer():void----------Bottom" );
			return;
		}
		else if( 0 == t.scrollTop )
		{
			console.log( "scroll is Top." );
			_bScrollBottomEnd = false;
			_bScrollTopEnd = true;
			_addEvent_scroll_listItemContainer();
			_addEvent_mWheel_listItemContainer();
			//window.KaiLog.timeStamp( "-- [ E ] - _evt_mScroll_listItemContainer():void----------Top" );
			return;
		}

		_bScrollBottomEnd = false;
		_bScrollTopEnd = false;
		_addEvent_scroll_listItemContainer();
		//window.KaiLog.timeStamp( "-- [ E ] - _evt_mScroll_listItemContainer():void----------" );
	};

	//--------------------------------------------------;

	/**
	 * @function
	 * @param {MouseWheelEvent} e event
	 */
	var _evt_mWheel_listItemContainer = function( e )
	{
		//window.KaiLog.timeStamp( "-- [ S ] - _evt_mWheel_listItemContainer():void----------" );

		e.stopImmediatePropagation();
		e.stopPropagation();
		//e.preventDefault();

		_removeEvent_mWheel_listItemContainer();

		//console.log( "e.wheelDelta : " + e.wheelDelta );

		if( _bScrollBottomEnd && ( 0 > e.wheelDelta ) )
		{
			_bScrollBottomEnd = _bScrollTopEnd = false;
			$el_ul.scroll_event_key = "bottom";
			$el_ul.js.req_Data_Next();
		}
		else if( _bScrollTopEnd && ( 0 < e.wheelDelta ) )
		{
			_bScrollBottomEnd = _bScrollTopEnd = false;
			$el_ul.scroll_event_key = "top";
			$el_ul.js.req_Data_Prev();
		}

		_addEvent_mWheel_listItemContainer();

		//window.KaiLog.timeStamp( "-- [ E ] - _evt_mWheel_listItemContainer():void----------" );
	};

	//----------------------------------------------------------------------------------------------------;

	//	FUNCTION;

	//----------------------------------------------------------------------------------------------------;

	/**
	 * @function
	 * @param {Object} d
	 */
	var _setData = function( d )
	{
		window.KaiLog.timeStamp( "-- [ S ] - _setData():void----------" );

		_setData.super( d );

		window.KaiLog.timeStamp( "-- [ E ] - _setData():void----------" );
	};
	_setData.super = _this.setData;

	//--------------------------------------------------;

	/**
	 * @function
	 */
	var _dispose = function()
	{
		_removeEvent();

		_el_ListContainer = null;

		_dispose.super();
	};
	_dispose.super = _this.dispose;

	//----------------------------------------------------------------------------------------------------;

	//	GETTER / SETTER;

	//----------------------------------------------------------------------------------------------------;

	//----------------------------------------------------------------------------------------------------;

	//	LOGIC;

	//----------------------------------------------------------------------------------------------------;

	//----------;
	_addEvent();
	_this.setEventDispatcher( $el_ul );
	//----------;

	//--------------------------------------------------this;
	var _ = _this;

	_.__el = $el_ul;

	_.dispose = _dispose;

	_.setData = _setData;
	//--------------------------------------------------this;

	return _this;
};

//----------------------------------------------------------------------------------------------------;
if( console ) console.log( "[ E ] - " + fileNm + "----------" );
//----------------------------------------------------------------------------------------------------;
